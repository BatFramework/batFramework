name: Publish to PyPI

on:
  push:
    branches:
      - master
      - dev

jobs:
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version build twine

      - name: Bump version for master (stable release)
        if: github.ref == 'refs/heads/master'
        run: |
          bump2version patch  # or minor/major depending on your needs

      - name: Bump version for dev (pre-release)
        if: github.ref == 'refs/heads/dev'
        run: |
          bump2version patch --new-version $(bump2version --dry-run --list | grep current_version | sed 's/^.*=//')-dev  # Append "-dev" to the version

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*

      # Create GitHub Release on master branch
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/master'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump2version.outputs.new_version }}
          name: "Release ${{ steps.bump2version.outputs.new_version }}"
          body: "Automated stable release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
