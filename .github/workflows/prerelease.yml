name: Release Dev

on:
  push:
    branches:
      - prerelease
  workflow_dispatch:

jobs:
  build-and-publish-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml','rb'))['project']['version'])")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools wheel

      - name: Build package
        run: python -m build

      - name: Publish to TestPyPI (manual run only)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: python -m twine upload --repository testpypi dist/*

      - name: Publish pre-release to PyPI (on push)
        if: ${{ github.event_name == 'push' }}
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload --repository pypi dist/* --skip-existing

      - name: Create GitHub Release
        if: ${{ github.event_name == 'push' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          body: Release version ${{ steps.get_version.outputs.version }}
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
